# name: Docker Container SHA256 Check with Dynamic SHA256

# on:
#   push:
#     branches:
#       - main

# jobs:
#   docker_job:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Build Docker image (Zero Trust)
#         id: build_image
#         run: |
#           IMAGE_TAG="my-sample-image:latest"
#           # Build the Docker image
#           docker build -t $IMAGE_TAG .

#           # Get the image SHA256 hash after building the image
#           IMAGE_SHA256=$(docker inspect --format='{{.Id}}' $IMAGE_TAG)
#           echo "Built image SHA256: $IMAGE_SHA256"
          
#           # Output the SHA256 to be used in later steps
#           echo "image_sha256=$IMAGE_SHA256" >> $GITHUB_ENV

#       - name: Log in to Docker Hub
#         run: |
#           echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

#       - name: Tag Docker image
#         run: |
#           docker tag my-sample-image ${{ secrets.DOCKERHUB_USERNAME }}/my-sample-image:latest

#       - name: Push Docker image to Docker Hub
#         run: |
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-sample-image:latest

#       - name: Run Docker container from pushed image
#         run: |
#           docker run -d --name my-sample-container ${{ secrets.DOCKERHUB_USERNAME }}/my-sample-image:latest

#       - name: Inspect Docker container
#         id: inspect_container
#         run: |
#           CONTAINER_SHA256=$(docker inspect --format='{{.Image}}' my-sample-container)
#           echo "Container SHA256: $CONTAINER_SHA256"
#           echo "container_sha256=$CONTAINER_SHA256" >> $GITHUB_ENV

#       - name: Compare image SHA256 with container SHA256 (Zero Trust)
#         run: |
#           IMAGE_SHA256="${{ env.image_sha256 }}"
#           CONTAINER_SHA256="${{ env.container_sha256 }}"
          
#           echo "Built image SHA256: $IMAGE_SHA256"
#           echo "Container SHA256: $CONTAINER_SHA256"

#           # Compare the two SHA256 hashes
#           if [ "$IMAGE_SHA256" == "$CONTAINER_SHA256" ]; then
#             echo "SHA256 matches. Success."
#           else
#             echo "SHA256 does not match. Failing pipeline."
#             exit 1
#           fi







name: Docker Container SHA256 Check with Dynamicc SHA256

on:
  push:
    branches:
      - main

jobs:
  docker_job:
    runs-on: [self-hosted, linux-runner]
    
    container:
      image: docker:20.10.7
      options: --privileged  # Required for Docker-in-Docker

    services:
      docker:
        image: docker:20.10.7-dind  # Docker-in-Docker service
        options: --privileged  # Necessary for Docker operations inside the container
        ports:
          - 2375:2375  # Expose Docker daemon port
        env:
          DOCKER_TLS_CERTDIR: ""  # Disable TLS for Docker daemon

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker environment
        run: |
          # Set Docker to communicate over the correct host
          export DOCKER_HOST=tcp://localhost:2375
          
          # Wait until Docker daemon is running
          timeout 60 sh -c "until docker info; do echo 'Waiting for Docker to start...'; sleep 3; done"

      - name: Build Docker image (Zero Trust)
        id: build_image
        run: |
          IMAGE_TAG="my-sample-image:latest"
          
          # Build the Docker image
          docker build -t $IMAGE_TAG .
          
          # Get the image SHA256 hash after building the image
          IMAGE_SHA256=$(docker inspect --format='{{.Id}}' $IMAGE_TAG)
          echo "Built image SHA256: $IMAGE_SHA256"
          
          # Output the SHA256 to be used in later steps
          echo "image_sha256=$IMAGE_SHA256" >> $GITHUB_ENV
