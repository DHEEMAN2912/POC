name: Build and Verify Containere

on:
  push:
    branches:
      - dev

jobs:
  verify-and-run:
    runs-on: [self-hosted, linux-runner]  # This starts the job on a VM, but will run the job in the container below

    container:
      image: docker:latest  # Use the Docker image you want (here we use Docker for build/run)
      options: --privileged  # To allow Docker to run inside the container (Docker in Docker)
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket from host to container

    steps:
    - name: Set up Docker in Docker
      run: |
        # Use sudo to avoid permission issues
        sudo docker version

    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Build Docker Image
      id: build_image
      run: |
        IMAGE_NAME=${{ secrets.MY_IMAGE }}
        IMAGE_TAG=${{ secrets.MY_TAG }}

        # Use sudo to build the Docker image
        sudo docker build -t $IMAGE_NAME:$IMAGE_TAG .

        # Get the SHA256 ID of the image
        IMAGE_SHA256=$(sudo docker images --no-trunc | grep "$IMAGE_NAME" | grep "$IMAGE_TAG" | awk '{print $3}')
        echo "Image SHA256: $IMAGE_SHA256"

        # Set the image SHA256 as an output
        echo "::set-output name=image_sha256::$IMAGE_SHA256"

    - name: Run Docker Container
      id: run_container
      run: |
        IMAGE_NAME=${{ secrets.MY_IMAGE }}
        IMAGE_TAG=${{ secrets.MY_TAG }}

        # Use sudo to run the container
        CONTAINER_ID=$(sudo docker run -d $IMAGE_NAME:$IMAGE_TAG)

        # Get the SHA256 ID of the running container
        CONTAINER_SHA256=$(sudo docker inspect --format='{{.Id}}' $CONTAINER_ID)
        echo "Container SHA256: $CONTAINER_SHA256"

        # Set the container SHA256 as an output
        echo "::set-output name=container_sha256::$CONTAINER_SHA256"

    - name: Compare SHA256 IDs
      run: |
        if [ "${{ steps.build_image.outputs.image_sha256 }}" == "${{ steps.run_container.outputs.container_sha256 }}" ]; then
            echo "SHA256 IDs match. Running the container as an agent."
            echo "Hurrah! We did it. Proceeding to the next stage :)"
        else
            echo "SHA256 IDs do not match. Failing the pipeline."
            exit 1
        fi
